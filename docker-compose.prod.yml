version: '3.8'

services:
  # SSL Certificate Manager
  certbot:
    image: certbot/certbot:latest
    container_name: pidea-certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/webroot:/var/www/html
    command: >
      certonly --webroot
      --webroot-path=/var/www/html
      --email ${SSL_EMAIL}
      --agree-tos --no-eff-email
      --domains ${SSL_DOMAIN}
      --keep-until-expiring
    depends_on:
      - nginx-proxy
    restart: unless-stopped
    networks:
      - pidea-network

  # SSL Reverse Proxy with automatic certificate renewal
  nginx-proxy:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    image: fr4iser/pidea:nginx-proxy
    container_name: pidea-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/webroot:/var/www/html
    environment:
      - SSL_DOMAIN=${SSL_DOMAIN}
      - SSL_EMAIL=${SSL_EMAIL}
    depends_on:
      - pidea-frontend
      - pidea-backend
    restart: unless-stopped
    networks:
      - pidea-network

  # SSL Certificate Renewal Service
  certbot-renew:
    image: certbot/certbot:latest
    container_name: pidea-certbot-renew
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/webroot:/var/www/html
    command: >
      renew --webroot
      --webroot-path=/var/www/html
      --quiet
    depends_on:
      - nginx-proxy
    restart: "no"
    networks:
      - pidea-network

  # Database
  pidea-db:
    build:
      context: ./database
      dockerfile: Dockerfile
    image: fr4iser/pidea:db
    container_name: pidea-db
    # No external ports - internal only
    volumes:
      - pidea-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: pidea
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pidea"]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 20s
    networks:
      - pidea-network

  # Backend (no external ports)
  pidea-backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: fr4iser/pidea:backend
    container_name: pidea-backend
    # No external ports - only accessible via proxy
    depends_on:
      pidea-db:
        condition: service_healthy
    environment:
      DOCKER_ENV: "true"
      NODE_ENV: "production"
    env_file:
      - .env
    volumes:
      - pidea-backend_logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp
    # Use host network for IDE connections
    network_mode: "host"
    restart: unless-stopped

  # Frontend (no external ports)
  pidea-frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    image: fr4iser/pidea:frontend
    container_name: pidea-frontend
    # No external ports - only accessible via proxy
    # Use host network to access backend on localhost
    network_mode: "host"
    depends_on:
      - pidea-backend
    env_file:
      - .env
    volumes:
      - pidea-frontend_logs:/var/log/nginx
    restart: unless-stopped

volumes:
  pidea-db-data:
    driver: local
  pidea-backend_logs:
    driver: local
  pidea-frontend_logs:
    driver: local

networks:
  pidea-network:
    driver: bridge 